{"ast":null,"code":"var _jsxFileName = \"/Volumes/Disk 1/Repos/p6-varun-Shubham-Sati/Week-9/todo/src/components/ToDo.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    deleteTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Completed / Not Completed\",\n              onClick: e => markDone(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Edit\",\n              onClick: () => setUpdateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Delete\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","ToDo","toDo","markDone","setUpdateData","deleteTask","sort","a","b","id","map","task","index","status","title","e"],"sources":["/Volumes/Disk 1/Repos/p6-varun-Shubham-Sati/Week-9/todo/src/components/ToDo.jsx"],"sourcesContent":["import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCircleCheck, faPen, faTrashCan\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ToDo = ({ toDo, markDone, setUpdateData, deleteTask }) => {\n  return(\n    <>\n      {toDo && toDo\n      .sort((a, b) => a.id > b.id ? 1 : -1)\n      .map( (task, index) => {\n        return(\n          <React.Fragment key={task.id}>\n            <div className=\"col taskBg\">\n              <div className={ task.status ? 'done' : '' }>\n                <span className=\"taskNumber\">{index + 1}</span>\n                <span className=\"taskText\">{task.title}</span>\n              </div>\n              <div className=\"iconsWrap\">\n                <span title=\"Completed / Not Completed\"\n                  onClick={ (e) => markDone(task.id) }\n                >\n                  <FontAwesomeIcon icon={faCircleCheck} />\n                </span>\n\n                {task.status ? null : (\n                  <span title=\"Edit\"\n                    onClick={ () => setUpdateData({ \n                      id: task.id, \n                      title: task.title, \n                      status: task.status ? true : false\n                    }) }\n                  >\n                    <FontAwesomeIcon icon={faPen} />\n                  </span>\n                )}\n\n                <span title=\"Delete\"\n                  onClick={() => deleteTask(task.id)}\n                >\n                  <FontAwesomeIcon icon={faTrashCan} />\n                </span>\n              </div>\n            </div>\n          </React.Fragment>\n        )\n      })\n      }  \n    </>\n  )\n}\n\nexport default ToDo;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,aAAa,EAAEC,KAAK,EAAEC,UAAU,QAC3B,mCAAmC;AAAA;AAAA;AAE1C,MAAMC,IAAI,GAAG,QAAmD;EAAA,IAAlD;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,aAAa;IAAEC;EAAW,CAAC;EACzD,oBACE;IAAA,UACGH,IAAI,IAAIA,IAAI,CACZI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CACpCC,GAAG,CAAE,CAACC,IAAI,EAAEC,KAAK,KAAK;MACrB,oBACE,QAAC,KAAK,CAAC,QAAQ;QAAA,uBACb;UAAK,SAAS,EAAC,YAAY;UAAA,wBACzB;YAAK,SAAS,EAAGD,IAAI,CAACE,MAAM,GAAG,MAAM,GAAG,EAAI;YAAA,wBAC1C;cAAM,SAAS,EAAC,YAAY;cAAA,UAAED,KAAK,GAAG;YAAC;cAAA;cAAA;cAAA;YAAA,QAAQ,eAC/C;cAAM,SAAS,EAAC,UAAU;cAAA,UAAED,IAAI,CAACG;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAC1C,eACN;YAAK,SAAS,EAAC,WAAW;YAAA,wBACxB;cAAM,KAAK,EAAC,2BAA2B;cACrC,OAAO,EAAIC,CAAC,IAAKZ,QAAQ,CAACQ,IAAI,CAACF,EAAE,CAAG;cAAA,uBAEpC,QAAC,eAAe;gBAAC,IAAI,EAAEX;cAAc;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QACnC,EAENa,IAAI,CAACE,MAAM,GAAG,IAAI,gBACjB;cAAM,KAAK,EAAC,MAAM;cAChB,OAAO,EAAG,MAAMT,aAAa,CAAC;gBAC5BK,EAAE,EAAEE,IAAI,CAACF,EAAE;gBACXK,KAAK,EAAEH,IAAI,CAACG,KAAK;gBACjBD,MAAM,EAAEF,IAAI,CAACE,MAAM,GAAG,IAAI,GAAG;cAC/B,CAAC,CAAG;cAAA,uBAEJ,QAAC,eAAe;gBAAC,IAAI,EAAEd;cAAM;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QAEnC,eAED;cAAM,KAAK,EAAC,QAAQ;cAClB,OAAO,EAAE,MAAMM,UAAU,CAACM,IAAI,CAACF,EAAE,CAAE;cAAA,uBAEnC,QAAC,eAAe;gBAAC,IAAI,EAAET;cAAW;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QAChC;UAAA;YAAA;YAAA;YAAA;UAAA,QACH;QAAA;UAAA;UAAA;UAAA;QAAA;MACF,GA/BaW,IAAI,CAACF,EAAE;QAAA;QAAA;QAAA;MAAA,QAgCX;IAErB,CAAC;EAAC,iBAED;AAEP,CAAC;AAAA,KA7CKR,IAAI;AA+CV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}