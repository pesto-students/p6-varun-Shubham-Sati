{"ast":null,"code":"var _jsxFileName = \"/Volumes/Disk 1/Repos/p6-varun-Shubham-Sati/Week-9/todo/src/components/ToDo.jsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleCheck, faPen, faTrashCan } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    deleteTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? \"done\" : \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Completed / Not Completed\",\n              onClick: e => markDone(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 21\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Edit\",\n              onClick: () => setUpdateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Delete\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","ToDo","toDo","markDone","setUpdateData","deleteTask","sort","a","b","id","map","task","index","status","title","e"],"sources":["/Volumes/Disk 1/Repos/p6-varun-Shubham-Sati/Week-9/todo/src/components/ToDo.jsx"],"sourcesContent":["import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCircleCheck,\n  faPen,\n  faTrashCan,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst ToDo = ({ toDo, markDone, setUpdateData, deleteTask }) => {\n  return (\n    <>\n      {toDo &&\n        toDo\n          .sort((a, b) => (a.id > b.id ? 1 : -1))\n          .map((task, index) => {\n            return (\n              <React.Fragment key={task.id}>\n                <div className=\"col taskBg\">\n                  <div className={task.status ? \"done\" : \"\"}>\n                    <span className=\"taskNumber\">{index + 1}</span>\n                    <span className=\"taskText\">{task.title}</span>\n                  </div>\n                  <div className=\"iconsWrap\">\n                    <span\n                      title=\"Completed / Not Completed\"\n                      onClick={(e) => markDone(task.id)}\n                    >\n                      <FontAwesomeIcon icon={faCircleCheck} />\n                    </span>\n\n                    {task.status ? null : (\n                      <span\n                        title=\"Edit\"\n                        onClick={() =>\n                          setUpdateData({\n                            id: task.id,\n                            title: task.title,\n                            status: task.status ? true : false,\n                          })\n                        }\n                      >\n                        <FontAwesomeIcon icon={faPen} />\n                      </span>\n                    )}\n\n                    <span title=\"Delete\" onClick={() => deleteTask(task.id)}>\n                      <FontAwesomeIcon icon={faTrashCan} />\n                    </span>\n                  </div>\n                </div>\n              </React.Fragment>\n            );\n          })}\n    </>\n  );\n};\n\nexport default ToDo;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,aAAa,EACbC,KAAK,EACLC,UAAU,QACL,mCAAmC;AAAC;AAAA;AAE3C,MAAMC,IAAI,GAAG,QAAmD;EAAA,IAAlD;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,aAAa;IAAEC;EAAW,CAAC;EACzD,oBACE;IAAA,UACGH,IAAI,IACHA,IAAI,CACDI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CACtCC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACpB,oBACE,QAAC,KAAK,CAAC,QAAQ;QAAA,uBACb;UAAK,SAAS,EAAC,YAAY;UAAA,wBACzB;YAAK,SAAS,EAAED,IAAI,CAACE,MAAM,GAAG,MAAM,GAAG,EAAG;YAAA,wBACxC;cAAM,SAAS,EAAC,YAAY;cAAA,UAAED,KAAK,GAAG;YAAC;cAAA;cAAA;cAAA;YAAA,QAAQ,eAC/C;cAAM,SAAS,EAAC,UAAU;cAAA,UAAED,IAAI,CAACG;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAC1C,eACN;YAAK,SAAS,EAAC,WAAW;YAAA,wBACxB;cACE,KAAK,EAAC,2BAA2B;cACjC,OAAO,EAAGC,CAAC,IAAKZ,QAAQ,CAACQ,IAAI,CAACF,EAAE,CAAE;cAAA,uBAElC,QAAC,eAAe;gBAAC,IAAI,EAAEX;cAAc;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QACnC,EAENa,IAAI,CAACE,MAAM,GAAG,IAAI,gBACjB;cACE,KAAK,EAAC,MAAM;cACZ,OAAO,EAAE,MACPT,aAAa,CAAC;gBACZK,EAAE,EAAEE,IAAI,CAACF,EAAE;gBACXK,KAAK,EAAEH,IAAI,CAACG,KAAK;gBACjBD,MAAM,EAAEF,IAAI,CAACE,MAAM,GAAG,IAAI,GAAG;cAC/B,CAAC,CACF;cAAA,uBAED,QAAC,eAAe;gBAAC,IAAI,EAAEd;cAAM;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QAEnC,eAED;cAAM,KAAK,EAAC,QAAQ;cAAC,OAAO,EAAE,MAAMM,UAAU,CAACM,IAAI,CAACF,EAAE,CAAE;cAAA,uBACtD,QAAC,eAAe;gBAAC,IAAI,EAAET;cAAW;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QAChC;UAAA;YAAA;YAAA;YAAA;UAAA,QACH;QAAA;UAAA;UAAA;UAAA;QAAA;MACF,GAjCaW,IAAI,CAACF,EAAE;QAAA;QAAA;QAAA;MAAA,QAkCX;IAErB,CAAC;EAAC,iBACL;AAEP,CAAC;AAAC,KA/CIR,IAAI;AAiDV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}